{"mappings":"AAAA;;;;;;;;;;;;CAYC,GACD,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C,MAAM,OAAO,SAAS,cAAc,CAAC;IACrC,MAAM,QAAQ,SAAS,cAAc,CAAC;IACtC,MAAM,MAAM,SAAS,cAAc,CAAC;IAEpC;;;;;;KAMC,GACD,MAAM,aAAa,CAAC,KAAK,KAAK,SAAS,IAAI,GACzC,GAAG,MAAM,OAAO,CAAC,EAAE,MAAM,OAAO,CAAC,EAAE,MAAM,OAAO,CAAC,EAAE,MAAM,QAAQ;IAEnE,KAAK,gBAAgB,CAAC,UAAU,OAAO;QACrC,EAAE,cAAc;QAChB,MAAM,QAAQ,MAAM,KAAK,CAAC,IAAI;QAC9B,IAAI,CAAC,OAAO;QAEZ,IAAI;YACF,MAAM,MAAM,CAAC,yDAAyD,EAAE,mBAAmB,QAAQ;YACnG,MAAM,WAAW,MAAM,MAAM;YAC7B,MAAM,UAAU,MAAM,SAAS,IAAI;YAEnC,IAAI,QAAQ,MAAM,GAAG,GAAG;gBACtB,MAAM,MAAM,OAAO,OAAO,CAAC,EAAE,CAAC,GAAG;gBACjC,MAAM,MAAM,OAAO,OAAO,CAAC,EAAE,CAAC,GAAG;gBACjC,MAAM,OAAO,WAAW,KAAK;gBAC7B,IAAI,GAAG,GAAG,CAAC,qDAAqD,EAAE,KAAK,qBAAqB,EAAE,IAAI,CAAC,EAAE,KAAK;YAC5G,OACE,MAAM;QAEV,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,qCAAkC;QAClD;IACF;AACF","sources":["src/map.js"],"sourcesContent":["/**\n * Initierar kartfunktionen.\n *\n * När sidan har laddats läggs en eventlyssnare på sökformuläret. Vid submit anropas\n * Nominatim API för att hämta koordinater baserat på användarens inmatade plats. Om APIet returnerar\n * resultat används den första träffen för att extrahera latitud och longitud som konverteras till nummer.\n * Sen beräknas en bounding box runt platsen och en OpenStreetMap iframe uppdateras med en inbäddad karta\n * som visar platsen med en markör.\n *\n * @async\n * @function initMap\n * @returns {Promise<void>} Ett promise som löses när kartan har uppdaterats.\n */\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    const form = document.getElementById(\"search-form\");\n    const input = document.getElementById(\"location-input\");\n    const map = document.getElementById(\"map\");\n  \n    /**\n     * Skapar en bounding box sträng baserat på latitud och longitud med ett givet offset.\n     * @param {number} lat - Latitud.\n     * @param {number} lon - Longitud.\n     * @param {number} [offset=0.05] - Offset för bounding box.\n     * @returns {string} En sträng i formatet \"minLon,minLat,maxLon,maxLat\".\n     */\n    const createBbox = (lat, lon, offset = 0.05) =>\n      `${lon - offset},${lat - offset},${lon + offset},${lat + offset}`;\n  \n    form.addEventListener(\"submit\", async (e) => {\n      e.preventDefault();\n      const query = input.value.trim();\n      if (!query) return;\n  \n      try {\n        const url = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(query)}`;\n        const response = await fetch(url);\n        const results = await response.json();\n  \n        if (results.length > 0) {\n          const lat = Number(results[0].lat);\n          const lon = Number(results[0].lon);\n          const bbox = createBbox(lat, lon);\n          map.src = `https://www.openstreetmap.org/export/embed.html?bbox=${bbox}&layer=mapnik&marker=${lat},${lon}`;\n        } else {\n          alert(\"Ingen plats hittades. Försök igen.\");\n        }\n      } catch (error) {\n        console.error(\"Fel vid hämtning av platsdata:\", error);\n      }\n    });\n  });\n  "],"names":[],"version":3,"file":"map.0a57cef4.js.map","sourceRoot":"/__parcel_source_root/"}